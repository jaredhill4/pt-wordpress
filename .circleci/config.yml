# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2

jobs:
  build:
    environment:
      ACF_PRO_KEY: b3JkZXJfaWQ9OTE3MTh8dHlwZT1kZXZlbG9wZXJ8ZGF0ZT0yMDE2LTEwLTE0IDE5OjE5OjA2

    docker:
      - image: circleci/php:7.1-node-browsers

    steps:
      - checkout

      - restore_cache:
          keys:
            - v3-composer-deps-{{ checksum "composer.lock" }}
            - v3-composer-deps-

      - run:
          name: Install Composer packages
          command: |
            composer install -n --prefer-dist

      - save_cache:
          key: v3-composer-deps-{{ checksum "composer.lock" }}
          paths:
            - wp
            - vendor
            - app/plugins

      - restore_cache:
          keys:
            - v1-npm-deps-{{ checksum "app/themes/wlion/package-lock.json" }}
            - v1-npm-deps-

      - run:
          name: Install NPM packages
          command: |
            cd app/themes/wlion
            npm install

      - save_cache:
          key: v1-npm-deps-{{ checksum "app/themes/wlion/package-lock.json" }}
          paths:
            - app/themes/wlion/node_modules

      - run:
          name: Build front-end assets
          command: |
            cd app/themes/wlion
            npm run build

      - persist_to_workspace:
          root: ./
          paths:
            - wp
            - vendor
            - app/plugins
            - app/themes/wlion/build

  test:
    docker:
      - image: circleci/php:7.1-node-browsers

    steps:
      - checkout

      - attach_workspace:
          at: ./

      - run:
          name: Run tests
          command: |
            echo "Running tests..."

      - run:
          name: Tests done
          command: |
            echo "All tests passed successfully!"

  deploy-review:
    environment:
      SSH_USER: wlion
      SSH_HOST: web8.wlion.com
      REPOSITORY: pt-wordpress-composer

    docker:
      - image: circleci/php:7.1-node-browsers

    steps:
      - checkout

      - attach_workspace:
          at: ./

      - run:
          name: Checkout temporary branch
          command: |
            git checkout -b temp-$CIRCLE_BRANCH

      # - run:
      #     name: Copy .env
      #     command: |
      #       cp stubs/review.env .env

      - run:
          name: Replace .gitignore
          command: |
            rm .gitignore
            cp stubs/review.env .env
            cp deploy/.gitignore-deploy-review .gitignore

      - run:
          name: Force add/commit env file and vendor and build directories
          command: |
            git add -A
            git config --global user.email "deploy@wlion.com"
            git config --global user.name "White Lion Automated Deployment"
            git commit -m "adding .env file"

      - add_ssh_keys:
          fingerprints:
            - "82:20:b3:70:46:c2:21:4d:df:92:c2:46:27:91:68:7d"

      - run:
          name: Add SSH host to known hosts
          command: |
            ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts

      - run:
          name: Deploy over SSH
          command: |
            git remote -v | grep --quiet review || git remote add review $SSH_USER@$SSH_HOST:git/$REPOSITORY.git
            git fetch --prune --quiet $CIRCLE_BRANCH
            git branch -r | grep --quiet $CIRCLE_BRANCH/temp-$CIRCLE_BRANCH && git push $CIRCLE_BRANCH --delete temp-$CIRCLE_BRANCH
            git push review temp-$CIRCLE_BRANCH

  deploy-production:
    docker:
      - image: circleci/php:7.1-node-browsers

    steps:
      - checkout

      - attach_workspace:
          at: ./

      - run:
          name: List files
          command: |
            ls -la

      - run:
          name: Done
          command: |
            echo "Done!"

      # TODO: Implement WP Engine deployment
      # - run:
      #     name: Remove .gitignore file
      #     command: |
      #       rm --rf .gitignore
      #       mv deploy/.gitignore-deploy-wpe .gitignore
      # - run:
      #     name: Move files
      #     command: |
      #       cp wp deploy-cache
      #       cp -r app deploy-cache/wp-content
      #       cd deploy-cache
      #       git init
      #       git remote add production git@git.wpengine.com:percproduction.git
      #       git push production

workflows:
  version: 2
  build-deploy:
    jobs:
      - build

      - test:
          requires:
            - build

      - deploy-review:
          requires:
            - test
          filters:
            branches:
              only: review

      # TODO: Explore using tagged releases for production deployment (https://circleci.com/docs/2.0/workflows/#executing-workflows-for-a-git-tag)
      - deploy-production:
          requires:
            - test
          filters:
            branches:
              only: master
