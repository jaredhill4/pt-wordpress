# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.1-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    steps:
      - checkout

      # Download and cache dependencies

      # composer cache

      - restore_cache:
          keys:
            # "composer.json" can be used if "composer.json"
            # is not committed to the repository.
            - v1-composer-deps-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-composer-deps-

      - run:
          name: Composer Install
          command: |
            composer install -n --prefer-dist
          environment:
            ACF_PRO_KEY: b3JkZXJfaWQ9OTE3MTh8dHlwZT1kZXZlbG9wZXJ8ZGF0ZT0yMDE2LTEwLTE0IDE5OjE5OjA2

      - save_cache:
          key: v1-composer-deps-{{ checksum "composer.lock" }}
          paths:
            - vendor

      # node cache

      - restore_cache:
          keys:
            - v1-npm-deps-{{ checksum "app/themes/wlion/package-lock.json" }}
            - v1-npm-deps-

      - run:
          name: Yarn Install
          command: |
            cd app/themes/wlion
            npm install

      - save_cache:
          key: v1-npm-deps-{{ checksum "app/themes/wlion/package-lock.json" }}
          paths:
            - app/themes/wlion/node_modules

      - run:
          name: Yarn Build
          command: |
            cd app/themes/wlion
            npm run build

      - persist_to_workspace:
          root: /
          paths:
            - vendor
            - app/themes/wlion/build

      # - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      # - run: sudo docker-php-ext-install zip
      # # Download and cache dependencies
      # - restore_cache:
      #     keys:
      #       # "composer.lock" can be used if it is committed to the repo
      #       - v1-composer-deps-{{ checksum "composer.json" }}
      #       # fallback to using the latest cache if no exact match is found
      #       - v1-composer-deps-
      # - run: composer install -n --prefer-dist
      # - save_cache:
      #     key: v1-composer-deps-{{ checksum "composer.json" }}
      #     paths:
      #       - ./vendor
      # - restore_cache:
      #     keys:
      #       - node-v1-{{ checksum "package.json" }}
      #       - node-v1-
      # - run: yarn install
      # - save_cache:
      #     key: node-v1-{{ checksum "package.json" }}
      #     paths:
      #       - node_modules
      # # prepare the database
      # - run: touch storage/testing.sqlite
      # - run: php artisan migrate --env=testing --database=sqlite_testing --force
      # # run tests with phpunit or codecept
      # #- run: ./vendor/bin/phpunit
      # - run: ./vendor/bin/codecept build
      # - run: ./vendor/bin/codecept run
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      # - deploy:
      #     requires:
      #       - build
