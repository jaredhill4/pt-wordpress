# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1

# Custom executors
executors:
  default-executor:
    docker:
      - image: circleci/php:7.1-node-browsers

# Custom commands
commands:
  add_known_hosts:
    steps:
      - run:
          name: Add SSH host to known hosts
          command: |
            ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts

  dist_default:
    steps:
      - run:
          name: Prepare files for deployment
          command: |
            shopt -s dotglob
            mkdir dist
            cp -a wp dist/wp
            cp -a app dist/app
            cp -a vendor dist/vendor
            cp -R .config/. dist/
            cp .stubs/.gitignore-$DEPLOY_ENV dist/.gitignore
            cp .stubs/$DEPLOY_ENV.env dist/.env

  dist_wpengine:
    steps:
      - run:
          name: Prepare files for WP Engine
          command: |
            mkdir dist
            cp -a wp/. dist/
            rm -rf dist/wp-content
            mkdir -p dist/wp-content
            cp -a app/. dist/wp-content
            cp .stubs/.gitignore-wpengine dist/.gitignore

  ssh_deploy:
    parameters:
      working_directory:
        default: ~/project
        type: string
    steps:
      - run:
          name: Add/commit vendor, build and environment files
          working_directory: << parameters.working_directory >>
          command: |
            git init
            git add -A
            git config --global user.email "deploy@wlion.com"
            git config --global user.name "White Lion Automated Deployment"
            git commit -m "committing vendor, build and environment files for deployment"
      - run:
          name: Checkout temporary branch
          working_directory: << parameters.working_directory >>
          command: |
            git checkout -b deploy-$CIRCLE_SHA1
      - run:
          name: Deploy over SSH
          working_directory: << parameters.working_directory >>
          command: |
            git remote add $DEPLOY_ENV $SSH_USER@$SSH_HOST:$REPOSITORY.git
            git push $DEPLOY_ENV deploy-$CIRCLE_SHA1

# Jobs
jobs:
  # Run Build
  build:
    executor: default-executor

    steps:
      - checkout

      - run:
          name: Set COMPOSER_AUTH ENV variable
          command: |
            echo 'export COMPOSER_AUTH="{\"http-basic\":{\"composer.deliciousbrains.com\":{\"username\":\"${DELICIOUS_BRAINS_COMPOSER_API_USERNAME}\",\"password\":\"${DELICIOUS_BRAINS_COMPOSER_API_PASSWORD}\"}}}"' >> $BASH_ENV

      - restore_cache:
          keys:
            - v3-composer-deps-{{ checksum "composer.lock" }}
            - v3-composer-deps-

      - run:
          name: Install Composer packages
          command: |
            composer install -n --prefer-dist

      - save_cache:
          key: v3-composer-deps-{{ checksum "composer.lock" }}
          paths:
            - wp
            - vendor
            - app/plugins

      - run:
          name: Install NVM
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash
            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV

      - restore_cache:
          keys:
            - v2-npm-deps-{{ checksum "app/themes/wlion/package-lock.json" }}
            - v2-npm-deps-

      - run:
          name: Install NPM packages
          working_directory: ~/project/app/themes/wlion
          command: |
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" --no-use
            nvm install
            nvm use
            npm install

      - save_cache:
          key: v2-npm-deps-{{ checksum "app/themes/wlion/package-lock.json" }}
          paths:
            - app/themes/wlion/node_modules

      - run:
          name: Build front-end assets
          working_directory: ~/project/app/themes/wlion
          command: |
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" --no-use
            nvm use
            npm run build

      - persist_to_workspace:
          root: ./
          paths:
            - wp
            - vendor
            - app/plugins
            - app/themes/wlion/build

  test:
    executor: default-executor

    steps:
      - checkout

      - attach_workspace:
          at: ./

      - run:
          name: Run tests
          command: |
            echo "Running tests..."

      - run:
          name: Tests done
          command: |
            echo "All tests passed successfully!"

  deploy-review:
    executor: default-executor

    environment:
      DEPLOY_ENV: review
      SSH_USER: wlion
      SSH_HOST: web8.wlion.com
      REPOSITORY: git/pt-wordpress-composer

    steps:
      - checkout
      - add_ssh_keys
      - add_known_hosts

      - attach_workspace:
          at: ./

      - dist_default

      - ssh_deploy:
          working_directory: ~/project/dist

  deploy-dev:
    executor: default-executor

    environment:
      DEPLOY_ENV: dev
      SSH_USER: git
      SSH_HOST: git.wpengine.com
      REPOSITORY: production/DEV_REPO

    steps:
      - checkout
      - add_ssh_keys
      - add_known_hosts

      - attach_workspace:
          at: ./

      - dist_wpengine

      - ssh_deploy:
          working_directory: ~/project/dist

  # Deploy Staging
  deploy-staging:
    executor: default-executor

    environment:
      DEPLOY_ENV: staging
      SSH_USER: git
      SSH_HOST: git.wpengine.com
      REPOSITORY: production/STAGE_REPO

    steps:
      - checkout
      - add_ssh_keys
      - add_known_hosts

      - attach_workspace:
          at: ./

      - dist_wpengine

      - ssh_deploy:
          working_directory: ~/project/dist

  # Deploy Production
  deploy-production:
    executor: default-executor

    environment:
      DEPLOY_ENV: production
      SSH_USER: git
      SSH_HOST: git.wpengine.com
      REPOSITORY: production/PROD_REPO

    steps:
      - checkout
      - add_ssh_keys
      - add_known_hosts

      - attach_workspace:
          at: ./

      - dist_wpengine

      - ssh_deploy:
          working_directory: ~/project/dist

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          context: deploy-wordpress
          filters:
            branches:
              only:
                - review
                - dev
                - staging
            tags:
              only:
                - /^((20)[2-9][0-9])\.(0[1-9]|1[012])\.(0[1-9]|[12][0-9]|3[01])\.([0-9][1-9])*$/

      - deploy-review:
          requires:
            - build
          filters:
            branches:
              only: review

      - deploy-dev:
          requires:
            - build
          filters:
            branches:
              only: dev

      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              only: staging

      # Reference for tag-based workflows (https://circleci.com/docs/2.0/workflows/#executing-workflows-for-a-git-tag)
      - deploy-production:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /^((20)[2-9][0-9])\.(0[1-9]|1[012])\.(0[1-9]|[12][0-9]|3[01])\.([0-9][1-9])*$/
